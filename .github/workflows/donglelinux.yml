name: DongleBuild
on: [push, pull_request]
jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        arch: [arm64]
        compiler: [gcc]
    env:
      ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v3
#    - uses: jirutka/setup-alpine@v1
    - name: Prepare build environment
      run: ./.ci-prepare-dongle.sh ${{ matrix.compiler }}
#      shell: alpine.sh --root {0}
    - name: Build
      id: build
      run: |
        ./.ci-build.sh
        echo "DPKG=$(cat deb_name)" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT
#      shell: alpine.sh {0}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: Dongle${{ github.run_id }}${{ github.run_attempt }}
        release_name: Release ${{ github.sha }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ../${{ steps.build.outputs.DPKG }}
        asset_name: release.deb
        asset_content_type: application/deb
